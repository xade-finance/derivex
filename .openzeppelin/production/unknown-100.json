{
  "manifestVersion": "3.1",
  "impls": {
    "ef7c9816be9c656792f27386d6f169be879f8f331c145d348515b9f054aa1cbd": {
      "address": "0x572Bf61be66ED5e07d3C3030edA004E827f29D59",
      "txHash": "0xcf103f151d1eefe0dfcfeb8f9e51c066a89b68ca779966398953bd270f8286db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "LowLevelErrorMessage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/LowLevelErrorMessage.sol:15"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL1",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:53"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL2",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:54"
          },
          {
            "contract": "MetaTxGateway",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/MetaTxGateway.sol:55"
          },
          {
            "contract": "MetaTxGateway",
            "label": "whitelistMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/MetaTxGateway.sol:58"
          },
          {
            "contract": "MetaTxGateway",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/MetaTxGateway.sol:74"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d3598a49816becb857840dee0f7e6f41313ffb707f7065d67b39bc89be7de58c": {
      "address": "0xB66aF11248300F6A8875f9214593b02e6F4Ed535",
      "txHash": "0xe68a343318130f9acf46f0d20ff0e9f3fb510332fcd9853b599411b37ae807bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "BaseBridge",
            "label": "ambBridge",
            "type": "t_contract(IAMB)16865",
            "src": "src/bridge/BaseBridge.sol:27"
          },
          {
            "contract": "BaseBridge",
            "label": "multiTokenMediator",
            "type": "t_contract(IMultiTokenMediator)16877",
            "src": "src/bridge/BaseBridge.sol:30"
          },
          {
            "contract": "BaseBridge",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/bridge/BaseBridge.sol:44"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ClientBridge",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/bridge/xDai/ClientBridge.sol:17"
          },
          {
            "contract": "ClientBridge",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/bridge/xDai/ClientBridge.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IAMB)16865": {
            "label": "contract IAMB"
          },
          "t_contract(IMultiTokenMediator)16877": {
            "label": "contract IMultiTokenMediator"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "99feae2ed7a22a27c699481d3ca57afeb233d741a10f9cc7bb2ff04b492108a8": {
      "address": "0x81fB5d142fd09A50B27DDE7F688802930FC8Fd85",
      "txHash": "0xa2c48118fbd8635ce2fc5b57335b0696fa692ab18155effd5ba4477601a1e48a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "InsuranceFund",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:35"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokenMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:36"
          },
          {
            "contract": "InsuranceFund",
            "label": "amms",
            "type": "t_array(t_contract(IAmm)18421)dyn_storage",
            "src": "src/InsuranceFund.sol:37"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokens",
            "type": "t_array(t_contract(IERC20)2022)dyn_storage",
            "src": "src/InsuranceFund.sol:38"
          },
          {
            "contract": "InsuranceFund",
            "label": "exchange",
            "type": "t_contract(IExchangeWrapper)18585",
            "src": "src/InsuranceFund.sol:41"
          },
          {
            "contract": "InsuranceFund",
            "label": "perpToken",
            "type": "t_contract(IERC20)2022",
            "src": "src/InsuranceFund.sol:42"
          },
          {
            "contract": "InsuranceFund",
            "label": "minter",
            "type": "t_contract(IMinter)18652",
            "src": "src/InsuranceFund.sol:43"
          },
          {
            "contract": "InsuranceFund",
            "label": "inflationMonitor",
            "type": "t_contract(IInflationMonitor)18601",
            "src": "src/InsuranceFund.sol:44"
          },
          {
            "contract": "InsuranceFund",
            "label": "beneficiary",
            "type": "t_address",
            "src": "src/InsuranceFund.sol:45"
          },
          {
            "contract": "InsuranceFund",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/InsuranceFund.sol:61"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IAmm)18421)dyn_storage": {
            "label": "contract IAmm[]"
          },
          "t_contract(IAmm)18421": {
            "label": "contract IAmm"
          },
          "t_array(t_contract(IERC20)2022)dyn_storage": {
            "label": "contract IERC20[]"
          },
          "t_contract(IERC20)2022": {
            "label": "contract IERC20"
          },
          "t_contract(IExchangeWrapper)18585": {
            "label": "contract IExchangeWrapper"
          },
          "t_contract(IMinter)18652": {
            "label": "contract IMinter"
          },
          "t_contract(IInflationMonitor)18601": {
            "label": "contract IInflationMonitor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6f93df95a744e1175ecf4398a0c017039198e179db1f9e68796e19e34424f149": {
      "address": "0xAA798BdeC1F19AcBe81A637C8A8089C912678Bf9",
      "txHash": "0x62f69d5285905820d834af8bf22f03407cc5bfe874ac8da052131155e43ca024",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "L2PriceFeed",
            "label": "ambBridge",
            "type": "t_address",
            "src": "src/L2PriceFeed.sol:35"
          },
          {
            "contract": "L2PriceFeed",
            "label": "rootBridge",
            "type": "t_address",
            "src": "src/L2PriceFeed.sol:36"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedMap",
            "type": "t_mapping(t_bytes32,t_struct(PriceFeed)12051_storage)",
            "src": "src/L2PriceFeed.sol:39"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "src/L2PriceFeed.sol:40"
          },
          {
            "contract": "L2PriceFeed",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/L2PriceFeed.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(PriceFeed)12051_storage)": {
            "label": "mapping(bytes32 => struct L2PriceFeed.PriceFeed)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(PriceFeed)12051_storage": {
            "label": "struct L2PriceFeed.PriceFeed",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "priceData",
                "type": "t_array(t_struct(PriceData)12045_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(PriceData)12045_storage)dyn_storage": {
            "label": "struct L2PriceFeed.PriceData[]"
          },
          "t_struct(PriceData)12045_storage": {
            "label": "struct L2PriceFeed.PriceData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "004fbe975a15e59a2ea731b6907a2b25c8c9c90dc4e11c16597326f55bfcd952": {
      "address": "0x06917EC4475025f89606011f8DC7b8a6BCB60c12",
      "txHash": "0xfac42a4c5aa4b750765e726eeeba939c24e8c37126df9dac7a4035664aeba6b5",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/OwnerPausable.sol:22"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/ClearingHouse.sol:159"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/ClearingHouse.sol:162"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/ClearingHouse.sol:165"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/ClearingHouse.sol:168"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)23788_storage)",
            "src": "src/ClearingHouse.sol:172"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)7004_storage)",
            "src": "src/ClearingHouse.sol:175"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)23788_storage)",
            "src": "src/ClearingHouse.sol:178"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)18052",
            "src": "src/ClearingHouse.sol:181"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)18088",
            "src": "src/ClearingHouse.sol:182"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "src/ClearingHouse.sol:185"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/ClearingHouse.sol:200"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)23788_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_mapping(t_address,t_struct(decimal)23788_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_mapping(t_address,t_struct(AmmMap)7004_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_contract(IInsuranceFund)18052": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)18088": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "b36833697c9da5ef546f228f2708952eaf5fb5087268e16ad324aec55cfa4139": {
      "address": "0xc1fd04c84919861E4E736E91199Df601e0469252",
      "txHash": "0x8a1c30046c62acdf2fb5a5c1f54ba64b9fb2610def02e092adc0166872ef1f57",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)25232_storage",
            "src": "src/Amm.sol:89"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)25232_storage",
            "src": "src/Amm.sol:92"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)25232_storage",
            "src": "src/Amm.sol:95"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)25232_storage",
            "src": "src/Amm.sol:97"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:99"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:100"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:101"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:102"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:103"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:106"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:107"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:108"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:109"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:110"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)23788_storage",
            "src": "src/Amm.sol:113"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)17763_storage)dyn_storage",
            "src": "src/Amm.sol:116"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "src/Amm.sol:118"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:119"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:120"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "src/Amm.sol:121"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "src/Amm.sol:122"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)3844_storage)dyn_storage",
            "src": "src/Amm.sol:123"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "src/Amm.sol:125"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "src/Amm.sol:126"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)1878",
            "src": "src/Amm.sol:127"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)18153",
            "src": "src/Amm.sol:128"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "src/Amm.sol:129"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/Amm.sol:144"
          }
        ],
        "types": {
          "t_struct(signedDecimal)25232_storage": {
            "label": "struct SignedDecimal.signedDecimal"
          },
          "t_struct(decimal)23788_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)17763_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)3844_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)1878": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)18153": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c5702dcaa18e56a8cf27e08ac9f95efe281de129072aa97dc8fdf813049eaba": {
      "address": "0xff2b7D31A70EaDc0e9b735AD15dB7eFF2FD37344",
      "txHash": "0x743ad14b04282698dc67d62e5d4cedfa22ba18b556f823edab0a9179135bc829",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:976"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:978"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1014"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1055"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1227"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1227"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1304"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1150"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1207"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1329"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1079"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1122"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1626"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1626"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1627"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1628"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1634"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3001_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1638"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1640"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2846",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1643"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2639",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1644"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1647"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1662"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_mapping(t_address,t_struct(AmmMap)3001_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_contract(IInsuranceFund)2846": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2639": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "5976e423f44479e3b8a072c1a515ce2c45febccc97faaf28199b491d66635efe": {
      "address": "0xAAE2a495dCcCC0065cdb2527f4482b2472B36954",
      "txHash": "0xe75b7ac7b37f101b4fddd64c18977c1615bf6ca8cfd29bc7f33009b178295a31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1119"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1122"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1127"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1128"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1129"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1130"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1131"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1134"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1135"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1137"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1144"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1147"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1149"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1153"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1154"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2156_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1155"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1157"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1158"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1176"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2156_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8355ea11b5200c80399f7143baf2b7cd65e20cf00617cb41741c2c791f71f324": {
      "address": "0xe8AD081B97c547CF9C65A315F53d36036760be13",
      "txHash": "0x4ba2083bd353ada1db1eeadd8d725a441d2bd39afcb9bae29acd818901b87e87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1119"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1122"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1127"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1128"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1129"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1130"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1131"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1134"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1135"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1137"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1144"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1147"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1149"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1153"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1154"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2154_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1155"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1157"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1158"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1176"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2154_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "731afd730d267d920a25ca57a9888926d186598baa3e82ab0bf4b7ef6ab977e0": {
      "address": "0x873A13a4F557752F71aa96acce7d7B65D4837362",
      "txHash": "0x3b1e7a5fc0015825ed1bf369676a1b6d305d01a1bfd8c814ac07a0715bb6d10d",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:976"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:978"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1014"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1055"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1227"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1227"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1304"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1150"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1207"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1329"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1079"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1122"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1625"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1625"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1626"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1627"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1633"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)2999_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1637"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1639"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2844",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1642"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2639",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1643"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1646"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1661"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_mapping(t_address,t_struct(AmmMap)2999_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_contract(IInsuranceFund)2844": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2639": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "220b31fe3c645eb50b38be7c5f81fc3884f835511a19f02470a502a5e61ae4a2": {
      "address": "0x5E7dC6a4f4E9d34FAbf7F63775F56bc5d7dC844d",
      "txHash": "0x339253e182a67623ac9d4706b019a92d05ad29e45c32f937e1cf38d9f9d63a9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)31263_storage",
            "src": "src/Amm.sol:90"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)31263_storage",
            "src": "src/Amm.sol:93"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)31263_storage",
            "src": "src/Amm.sol:96"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)31263_storage",
            "src": "src/Amm.sol:98"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:100"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:101"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:102"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:103"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:104"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:107"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:108"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:109"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:110"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:111"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)29819_storage",
            "src": "src/Amm.sol:114"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)17655_storage)dyn_storage",
            "src": "src/Amm.sol:117"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "src/Amm.sol:119"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:120"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:121"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "src/Amm.sol:122"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "src/Amm.sol:123"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)3844_storage)dyn_storage",
            "src": "src/Amm.sol:124"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "src/Amm.sol:126"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "src/Amm.sol:127"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)1878",
            "src": "src/Amm.sol:128"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)18043",
            "src": "src/Amm.sol:129"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "src/Amm.sol:130"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/Amm.sol:145"
          }
        ],
        "types": {
          "t_struct(signedDecimal)31263_storage": {
            "label": "struct SignedDecimal.signedDecimal"
          },
          "t_struct(decimal)29819_storage": {
            "label": "struct Decimal.decimal"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)17655_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)3844_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)1878": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)18043": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a817ae5f2c539bc1d8ae1afd6a84d677c5bbc67fc8637d2ecd45730bc70223b5": {
      "address": "0xBab8a480390Ce39b9d4b70da1e175A88F9526226",
      "txHash": "0xf2e3f20ae05389511b6f39d430bb829b7848b8c0e09272ba93a3497d25be9848",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1120"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1123"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1128"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1129"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1130"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1131"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1132"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1135"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1136"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1139"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1139"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1141"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1141"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1145"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1148"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1152"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1154"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1155"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2158_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1157"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1158"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1160"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1160"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1177"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_struct(LiquidityChangedSnapshot)1880_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot",
            "members": [
              {
                "label": "cumulativeNotional",
                "type": "t_struct(signedDecimal)1061_storage"
              },
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "totalPositionSize",
                "type": "t_struct(signedDecimal)1061_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2158_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_struct(ReserveSnapshot)2158_storage": {
            "label": "struct Amm.ReserveSnapshot",
            "members": [
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ab98567cbf43ac1c7db5ba17c2cd22a490aaa4357bfc903d77f784b530361e6": {
      "address": "0x26eF1173093EF5A742B742ACaD644Ba6168E8b8A",
      "txHash": "0x8c3d3ec0df271de82657af96de2d8ca79db968bfe5c551c8a5a158b448d67dc9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "ChainlinkPriceFeed",
            "label": "priceFeedMap",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
            "src": "src/ChainlinkPriceFeed.sol:21"
          },
          {
            "contract": "ChainlinkPriceFeed",
            "label": "priceFeedKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "src/ChainlinkPriceFeed.sol:22"
          },
          {
            "contract": "ChainlinkPriceFeed",
            "label": "priceFeedDecimalMap",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "src/ChainlinkPriceFeed.sol:23"
          },
          {
            "contract": "ChainlinkPriceFeed",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/ChainlinkPriceFeed.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(bytes32 => contract AggregatorV3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6911438a4e40abd859544e1a900d6b11ddcaf2e6f924ab3bf6555617670f6c0d": {
      "address": "0xD01C73780a6c1A998dF29e584D1c704c692B1A61",
      "txHash": "0x985ce160f3c0d344fa000398b060180b6919e376e5105a4a8e699fcaedb60794",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1624"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1624"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1625"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1626"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1632"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3003_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1636"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1638"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2836",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1641"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2844",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1642"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1645"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1660"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3003_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3003_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)2976_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)2976_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)2976_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2836": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2844": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "844ca7a706bccf6927ce5d08c09fd1e35e6224bb78b34e69719aa126d5ba833c": {
      "address": "0x89822752837fbCedCc5d1434b990f3BC64c86af1",
      "txHash": "0xecadb4234a69042437d7043c563ef21d0bef426c0f1a5698d623cfc627f913c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1130"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1133"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1139"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1141"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1142"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1145"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1146"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1148"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1149"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1149"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1155"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1158"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1160"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1161"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1162"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1164"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1165"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2168_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1166"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1167"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1168"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1169"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1170"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1170"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1187"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_struct(LiquidityChangedSnapshot)1880_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot",
            "members": [
              {
                "label": "cumulativeNotional",
                "type": "t_struct(signedDecimal)1061_storage"
              },
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "totalPositionSize",
                "type": "t_struct(signedDecimal)1061_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2168_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_struct(ReserveSnapshot)2168_storage": {
            "label": "struct Amm.ReserveSnapshot",
            "members": [
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e75b705d84d5466b903ca2f2a55f3dadada73ba1e85d4e8adb186177b344a032": {
      "address": "0x632e9B6626C34F58Cdd552ec2F704AF8593aaFd4",
      "txHash": "0x83e86738019f5786ec15afffce927223ba0fd52391638b2e911be60862d2b94f",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1628"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1628"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1629"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1630"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1636"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3014_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1640"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1642"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2846",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1645"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2854",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1646"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1649"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1664"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3014_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3014_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)2987_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)2987_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)2987_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2846": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2854": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "f12fd4b8344d0c5b82bdebc5b75710b73d561ffa2bc577261d29d5f36ddaf1d3": {
      "address": "0xB6Ceb1801CB8B97Dfa563C9cff3fA0C14A1355D7",
      "txHash": "0x50c4695002cbb4bb6c2ea29b5eefa33b6a0e0f506fdfcdb4ff1f4fccae0b084b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1131"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1134"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1139"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1140"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1141"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1142"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1143"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1146"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1147"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1149"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1152"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1152"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1159"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1161"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1162"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1163"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1165"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1166"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2170_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1167"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1168"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1169"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1170"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1171"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1171"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1188"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_struct(LiquidityChangedSnapshot)1880_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot",
            "members": [
              {
                "label": "cumulativeNotional",
                "type": "t_struct(signedDecimal)1061_storage"
              },
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "totalPositionSize",
                "type": "t_struct(signedDecimal)1061_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2170_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_struct(ReserveSnapshot)2170_storage": {
            "label": "struct Amm.ReserveSnapshot",
            "members": [
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4edebee772ede66ea54187a031221d677b275ffe0255a0e80fe6954b65e73190": {
      "address": "0xccAb74D76dd4999C09086907f4467720D0B6836A",
      "txHash": "0x4b26cfb8a90bdcea3ddcfeca928a655ee806a0bae4a8b42168ce73201b91858c",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1629"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1629"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1630"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1631"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1637"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3016_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1641"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1643"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2848",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1647"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2856",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1647"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1649"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1651"
          },
          {
            "contract": "ClearingHouse",
            "label": "partialLiquidationRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1662"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3016_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3016_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)2989_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)2989_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)2989_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2848": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2856": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "77bb31a740258d5e06bd9b1d9afa9f2eeeb459d98d33f6a7c5d6c05e5ca3fd41": {
      "address": "0xf8Bc804BB6b4485C4fbC807cbed14cF64a76e0A1",
      "txHash": "0x1d7c9e0d050200f974790b052248f729f95cc057e87cd78c1f9b68d9fd1b53c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:740"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:745"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:783"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:822"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:839"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:842"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:923"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:15"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1135"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1138"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1143"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)1061_storage",
            "src": "flattened/Amm/src/Amm.sol:1144"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1145"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1146"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1147"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1150"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1151"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1153"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1154"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1154"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1156"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)489_storage",
            "src": "flattened/Amm/src/Amm.sol:1160"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1163"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1165"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1166"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1167"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "flattened/Amm/src/Amm.sol:1169"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "flattened/Amm/src/Amm.sol:1170"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)2177_storage)dyn_storage",
            "src": "flattened/Amm/src/Amm.sol:1171"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1172"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "flattened/Amm/src/Amm.sol:1173"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)347",
            "src": "flattened/Amm/src/Amm.sol:1174"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)77",
            "src": "flattened/Amm/src/Amm.sol:1176"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "flattened/Amm/src/Amm.sol:1177"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/Amm/src/Amm.sol:1177"
          }
        ],
        "types": {
          "t_struct(signedDecimal)1061_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(decimal)489_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)1880_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_struct(LiquidityChangedSnapshot)1880_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot",
            "members": [
              {
                "label": "cumulativeNotional",
                "type": "t_struct(signedDecimal)1061_storage"
              },
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "totalPositionSize",
                "type": "t_struct(signedDecimal)1061_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)2177_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_struct(ReserveSnapshot)2177_storage": {
            "label": "struct Amm.ReserveSnapshot",
            "members": [
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)489_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)347": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)77": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c652c16d2939229a3fc9404a4e0bccf971df130cae97516e7f13ff60f29333ad": {
      "address": "0x212B6cfC5a1C373ceF16eAc3F975B98FCd664862",
      "txHash": "0xe611a4c00a202d15971ce39fdc5f520e31a42b15ded3e5b8c323a4042bf542ce",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1633"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1633"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1634"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1635"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1641"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3023_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1645"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1647"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2855",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1651"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2863",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1651"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1653"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1655"
          },
          {
            "contract": "ClearingHouse",
            "label": "partialLiquidationRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1666"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3023_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3023_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)2996_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)2996_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)2996_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2855": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2863": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "f33999cf8e890280860f4496cf8c4e77715d02d488d36ac763754a9a17e33657": {
      "address": "0xb61eE9e23F8F8FA6B248868833D95C38a2808743",
      "txHash": "0x89eeca7d517d52a013d358354f9271df5bce631833ec4b75aad19bc17ab717ce",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1633"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1633"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1634"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1635"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1641"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3023_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1645"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1647"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2855",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1651"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2863",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1651"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1653"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1655"
          },
          {
            "contract": "ClearingHouse",
            "label": "partialLiquidationRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1666"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3023_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3023_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)2996_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)2996_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)2996_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2855": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2863": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "be8eac21f24c5d8b9e1c203f017a20e23e070114e449fcf87c1004a08ee3ece2": {
      "address": "0x43600a65b765F358ad605ad76aECEE5C6A2aCb96",
      "txHash": "0x8096dfa318d8f778bc05440073e039ba39c1c7569e5d83e46ba539f792b58621",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:95"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "BaseBridge",
            "label": "ambBridge",
            "type": "t_contract(IAMB)16943",
            "src": "src/bridge/BaseBridge.sol:27"
          },
          {
            "contract": "BaseBridge",
            "label": "multiTokenMediator",
            "type": "t_contract(IMultiTokenMediator)16955",
            "src": "src/bridge/BaseBridge.sol:30"
          },
          {
            "contract": "BaseBridge",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/bridge/BaseBridge.sol:44"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ClientBridge",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/bridge/xDai/ClientBridge.sol:17"
          },
          {
            "contract": "ClientBridge",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/bridge/xDai/ClientBridge.sol:19"
          },
          {
            "contract": "ClientBridge",
            "label": "minWithdrawalAmountMap",
            "type": "t_mapping(t_address,t_struct(decimal)32217_storage)",
            "src": "src/bridge/xDai/ClientBridge.sol:26"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)32217_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(decimal)32217_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IAMB)16943": {
            "label": "contract IAMB"
          },
          "t_contract(IMultiTokenMediator)16955": {
            "label": "contract IMultiTokenMediator"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4d048fd22b96e01582798c7049a248a08e122cfa821acebebc1e00178edb1d84": {
      "address": "0x2C872028B0fb929224D80Ec1EBcDCc916c5c2C5f",
      "txHash": "0xf165240850efce8008cc91286f397162ddb2fc479f3b226150cc4eeb37e9f54a",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:806"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:818"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:973"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:975"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1011"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1052"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1224"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1301"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1147"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1204"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1326"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1076"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1119"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:15"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:78"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1638"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1638"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1639"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1640"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1646"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)3032_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1650"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)532_storage)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1652"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)2855",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1656"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)2863",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1656"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1658"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1660"
          },
          {
            "contract": "ClearingHouse",
            "label": "partialLiquidationRatio",
            "type": "t_struct(decimal)532_storage",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1671"
          },
          {
            "contract": "ClearingHouse",
            "label": "backstopLiquidityProviderMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "flattened/ClearingHouse/src/ClearingHouse.sol:1673"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)532_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)532_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)3032_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)3032_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)1104_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)3005_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)1104_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)1104_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)3005_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)3005_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)532_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)1104_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)2855": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)2863": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x29853EcF31eaedcD9074a11A85A8C8b689165F0b",
    "txHash": "0xbdb7354f7895097e56a664b9491eb81f1baf53dd4eeb4adf77237a67ddc72857"
  }
}
